version: '3.8'
networks:
  frontend:
    name: frontend
  backend:
    name: backend
services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    container_name: postgres
    ports:
      - "55432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    restart: always
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "55430:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
  hostingFile:
    container_name: myHostingFile
    image: alpine
    command: tail -f /dev/null
    volumes:
      - type: bind
        source: ./public/myDocuments
        target: /myHostDocument
    ports:
      - "55431:22"
volumes:
  database_data:










# TODO:  changer le path du container hostfile; verifier avec filezilla qu'on accede bien au donner au volume; mettre a jour le front pour rendre tout fonctionnel avec un systeme d'uploead depuis un front twig

#  adminer:
#    image: adminer:latest
#    container_name: myadminer
#    depends_on:
#      - formation.zabbix-mysql
#    deploy:
#      restart_policy:
#        condition: on-failure
#        max_attempts: 3
#    networks:
#      - zabbix-network-back
#      - zabbix-network-front
#    environment:
#      ADMINER_DEFAULT_DB_DRIVER: ${ADMINER_DEFAULT_DB_DRIVER}
#      ADMINER_DEFAULT_SERVER: ${ADMINER_DEFAULT_SERVER}
#      ADMINER_DEFAULT_DB_NAME: ${ADMINER_DEFAULT_DB_NAME}
#      ADMINER_PLUGINS: dump-zip dump-bz2 dump-date
#      ADMINER_DESIGN: galkaev # nette
#    ports:
#      - "55321:8080"